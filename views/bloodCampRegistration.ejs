<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register Blood Camp | LifebloX</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            background-color: #f8f9fa;
        }
        .container {
            max-width: 700px;
            width: 100%;
        }
        @media (max-width: 576px) {
            .container {
                padding: 15px;
                box-shadow: none;
            }
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="style.css">
</head>
<body class="gradient-background">
    <div class="container p-4 bg-light rounded shadow-lg">
        <!-- Home Link -->
        <div class="d-flex justify-content-start mb-2">
            <a href="/" class="text-danger fw-bold text-decoration-none"> &larr; Back to Home</a>
        </div>
        <h2 class="text-center text-danger fw-bold mb-4">Register Blood Donation Camp</h2>
        <form id="campForm" action="/bloodCampRegistration" method="POST" novalidate>
            <div class="mb-3">
                <label for="campName" class="form-label">Camp Name</label>
                <input type="text" class="form-control" id="campName" placeholder="Enter camp name" required minlength="3" maxlength="100">
                <div class="invalid-feedback">Please enter a valid camp name (3-100 characters).</div>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="location" class="form-label">iFrame Location Link (small)</label>
                    <input type="text" class="form-control" id="location" placeholder="Enter location URL" required>
                    <div class="invalid-feedback">Please enter a valid URL for the location.</div>
                </div>
                <div class="col-md-6 mb-3">
                    <label class="form-label" for="city">City</label>
                    <select class="form-select" id="city" required>
                        <option value="" selected disabled>Select City</option>
                        <option value="Ahmedabad">Ahmedabad</option>
                        <option value="Mumbai">Mumbai</option>
                        <option value="Delhi">Delhi</option>
                        <option value="Lucknow">Lucknow</option>
                        <option value="Bangalore">Bangalore</option>
                    </select>
                    <div class="invalid-feedback">Please select a city.</div>
                </div>
            </div>
            
            <div class="mb-3">
                <label for="date" class="form-label">Date</label>
                <input type="date" class="form-control" id="date" required>
                <div class="invalid-feedback">Please select a valid date.</div>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="startTime" class="form-label">Start Time</label>
                    <input type="time" class="form-control" id="startTime" required>
                    <div class="invalid-feedback">Please select a start time.</div>
                </div>

                <div class="col-md-6 mb-3">
                    <label for="endTime" class="form-label">End Time</label>
                    <input type="time" class="form-control" id="endTime" required>
                    <div class="invalid-feedback">Please select an end time.</div>
                </div>
            </div>
            
            <div class="mb-3">
                <label class="form-label" for="bloodbank">Blood Bank</label>
                <select class="form-select" id="bloodbank" required>
                    <option value="" selected disabled>Select Blood Bank</option>
                    <% if (bloodbanks && bloodbanks.length > 0) { %>
                        <% bloodbanks.forEach(function(bank) { %>
                            <option value="<%= bank.bloodBankName %>"><%= bank.bloodBankName %></option>
                        <% }); %>
                    <% } else { %>
                        <option value="" disabled>NO BLOOD BANK REGISTERED</option>
                    <% } %>
                </select>
                <div class="invalid-feedback">Please select a blood bank.</div>
            </div>
            
            <div class="mb-3">
                <label for="contact" class="form-label">Contact Number</label>
                <input type="tel" class="form-control" id="contact" pattern="[6-9][0-9]{9}" placeholder="Enter 10-digit mobile number" required>
                <div class="invalid-feedback">Please enter a valid 10-digit mobile number starting with 6-9.</div>
            </div>
            
            <div class="mb-3">
                <label for="email" class="form-label">Email</label>
                <input type="email" class="form-control" id="email" placeholder="Enter email" required>
                <div class="invalid-feedback">Please enter a valid email address.</div>
            </div>
            
            <button type="submit" class="btn btn-danger w-100">Register Camp</button>
        </form>
    </div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('campForm');
            const startTimeInput = document.getElementById('startTime');
            const endTimeInput = document.getElementById('endTime');
            const dateInput = document.getElementById('date');

            // Custom validation functions
            function validateCampName(input) {
                const value = input.value.trim();
                return value.length >= 3 && value.length <= 100;
            }


            function validateContactNumber(input) {
                const pattern = /^[6-9][0-9]{9}$/;
                return pattern.test(input.value);
            }

            function validateTimeRange() {
                if (startTimeInput.value && endTimeInput.value) {
                    return startTimeInput.value < endTimeInput.value;
                }
                return false;
            }

            function validateFutureDate() {
                const selectedDate = new Date(dateInput.value);
                const today = new Date();
                today.setHours(0, 0, 0, 0);
                return selectedDate >= today;
            }

            // Custom event listeners for real-time validation
            form.querySelectorAll('input, select').forEach(input => {
                input.addEventListener('input', function() {
                    validateInput(this);
                });
            });

            // Specific validations
            startTimeInput.addEventListener('change', function() {
                validateInput(startTimeInput);
                validateInput(endTimeInput);
            });

            endTimeInput.addEventListener('change', function() {
                validateInput(startTimeInput);
                validateInput(endTimeInput);
            });

            function validateInput(input) {
                let isValid = true;

                switch(input.id) {
                    case 'campName':
                        isValid = validateCampName(input);
                        break;
                    case 'contact':
                        isValid = validateContactNumber(input);
                        break;
                    case 'startTime':
                    case 'endTime':
                        if (startTimeInput.value && endTimeInput.value) {
                            isValid = validateTimeRange();
                        }
                        break;
                    case 'date':
                        isValid = validateFutureDate();
                        break;
                }

                if (isValid) {
                    input.classList.remove('is-invalid');
                    input.classList.add('is-valid');
                } else {
                    input.classList.remove('is-valid');
                    input.classList.add('is-invalid');
                }

                return isValid;
            }

            // Form submission handler
                form.addEventListener('submit', function(event) {
            event.preventDefault();
            event.stopPropagation();

            let isFormValid = true;
            const inputs = form.querySelectorAll('input, select');

            inputs.forEach(input => {
                if (!validateInput(input)) {
                    isFormValid = false;
                }
            });

            if (isFormValid) {
                // Collect form data
                const formData = {
                    campName: document.getElementById('campName').value,
                    location: document.getElementById('location').value,
                    city: document.getElementById('city').value,
                    date: document.getElementById('date').value,
                    startTime: document.getElementById('startTime').value,
                    endTime: document.getElementById('endTime').value,
                    bloodbank: document.getElementById('bloodbank').value,
                    contact: document.getElementById('contact').value,
                    email: document.getElementById('email').value
                };

                // Send data to server using fetch
                fetch('/registerBloodCamp', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formData)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Show success message
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: data.message,
                            confirmButtonText: 'OK'
                        }).then(() => {
                            // Optionally reload the page or clear the form
                            form.reset();
                            window.location.href = '/';
                        });
                    } else {
                        // Show error message
                        Swal.fire({
                            icon: 'error',
                            title: 'Registration Failed',
                            text: data.message,
                            confirmButtonText: 'Try Again'
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong. Please try again.',
                        confirmButtonText: 'OK'
                    });
                });
            } else {
                form.classList.add('was-validated');
            }
             });
        });
    </script>
</body>
</html>