<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blood Availability | LifebloX</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            background-color: #f8f9fa;
        }
        .container {
            max-width: 900px;
            width: 100%;
        }
        .result-card {
            transition: all 0.3s ease;
        }
        .result-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }
        @media (max-width: 576px) {
            .container {
                padding: 15px;
                box-shadow: none;
            }
        }
        .blood-type-badge {
            font-size: 1.2rem;
            font-weight: bold;
        }
        .no-results {
            text-align: center;
            padding: 2rem;
            color: #6c757d;
        }
        .loader {
            border: 5px solid #f3f3f3;
            border-top: 5px solid #dc3545;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite;
            margin: 20px auto;
            display: none;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        /* Toast notification styles */
        .toast-container {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 9999;
        }
        .toast {
            color: white;
            padding: 10px 20px;
            border-radius: 4px;
            margin-bottom: 10px;
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        .toast.show {
            opacity: 1;
        }
        .toast-success {
            background-color: #28a745;
        }
    </style>
</head>
<body>
    <div class="container p-4 bg-white rounded shadow-lg">
        <h2 class="text-center text-danger fw-bold mb-4">Blood Availability Search</h2>
        <!-- Home Link -->
        <div class="d-flex justify-content-start mb-2">
            <a href="/" class="text-danger fw-bold text-decoration-none"> &larr; Back to Home</a>
        </div><br>
        <div class="row g-3 mb-4">
            <div class="col-md-4">
                <label for="bloodComponent" class="form-label">Blood Component</label>
                <select class="form-select" id="bloodComponent">
                    <option value="">All Components</option>
                    <option value="Whole Blood">Whole Blood</option>
                    <option value="Single Plasma">Single Plasma</option>
                    <option value="Single Platelet">Single Platelet</option>
                </select>
            </div>
            <div class="col-md-4">
                <label for="bloodType" class="form-label">Blood Type</label>
                <select class="form-select" id="bloodType">
                    <option value="">All Blood Types</option>
                    <option value="A+">A+</option>
                    <option value="A-">A-</option>
                    <option value="B+">B+</option>
                    <option value="B-">B-</option>
                    <option value="AB+">AB+</option>
                    <option value="AB-">AB-</option>
                    <option value="O+">O+</option>
                    <option value="O-">O-</option>
                </select>
            </div>
            <div class="col-md-4">
                <label for="city" class="form-label">City</label>
                <select class="form-select" id="city">
                    <option value="">All Cities</option>
                    <option value="Ahmedabad">Ahmedabad</option>
                    <option value="Delhi">Delhi</option>
                    <option value="Mumbai">Mumbai</option>
                    <option value="Lucknow">Lucknow</option>
                    <option value="Bangalore">Bangalore</option>
                </select>
            </div>
        </div>
        
        <div class="d-grid gap-2">
            <button type="button" id="searchButton" class="btn btn-danger">Search Availability</button>
            <button type="button" id="resetButton" class="btn btn-outline-secondary">Reset Filters</button>
        </div>
        
        <div id="loader" class="loader"></div>
        
        <div id="result" class="mt-4">
            <!-- Results will be displayed here -->
        </div>
    </div>

    <!-- Toast container for notifications -->
    <div class="toast-container"></div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById("searchButton").addEventListener("click", function() {
            const bloodComponent = document.getElementById("bloodComponent").value;
            const bloodType = document.getElementById("bloodType").value;
            const city = document.getElementById("city").value;
            
            // Show loader
            document.getElementById("loader").style.display = "block";
            
            // Clear previous results
            document.getElementById("result").innerHTML = "";
            
            // Build the query string
            const queryParams = new URLSearchParams();
            if (bloodComponent) queryParams.append("bloodComponent", bloodComponent);
            if (bloodType) queryParams.append("bloodType", bloodType);
            if (city) queryParams.append("city", city);
            
            // Make the API call to our backend
            fetch(`/api/bloodAvailability?${queryParams.toString()}`)
                .then(response => response.json())
                .then(data => {
                    // Hide loader
                    document.getElementById("loader").style.display = "none";
                    
                    if (data.success && data.results.length > 0) {
                        displayResults(data.results);
                    } else {
                        showNoResults();
                    }
                })
                .catch(error => {
                    console.error("Error fetching blood availability:", error);
                    document.getElementById("loader").style.display = "none";
                    document.getElementById("result").innerHTML = `
                        <div class="alert alert-danger" role="alert">
                            An error occurred while fetching blood availability data. Please try again later.
                        </div>
                    `;
                });
        });

        document.getElementById("resetButton").addEventListener("click", function() {
            document.getElementById("bloodComponent").value = "";
            document.getElementById("bloodType").value = "";
            document.getElementById("city").value = "";
            document.getElementById("result").innerHTML = "";
        });

        function displayResults(results) {
            const resultDiv = document.getElementById("result");
            let resultsHTML = '<div class="row">';
            
            results.forEach(result => {
                const bloodBank = result.bloodBank;
                
                resultsHTML += `
                <div class="col-md-6 mb-4">
                    <div class="card result-card">
                        <div class="card-header bg-danger text-white">
                            <h5 class="mb-0">${bloodBank.bloodBankName}</h5>
                        </div>
                        <div class="card-body">
                            <h6 class="card-subtitle mb-2 text-muted">${bloodBank.hospitalName}</h6>
                            <p class="card-text">
                                <strong>City:</strong> ${bloodBank.city}<br>
                                <strong>Address:</strong> ${bloodBank.address}<br>
                                <strong>Contact:</strong> ${bloodBank.contactNo}
                            </p>
                            <div class="mt-3">
                                <h6>Available Blood:</h6>
                                <div class="d-flex flex-wrap gap-2">`;
                
                result.matchingStock.forEach(stock => {
                    const expiryDate = new Date(stock.expiryDate).toLocaleDateString();
                    resultsHTML += `
                    <div class="card mb-2 w-100">
                        <div class="card-body p-2">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <span class="badge bg-danger blood-type-badge">${stock.bloodType}</span>
                                    <span class="ms-2">${stock.bloodComponent}</span>
                                </div>
                                <div>
                                    <span class="badge bg-success">${stock.units} Units</span>
                                </div>
                            </div>
                            <small class="text-muted">Expires: ${expiryDate}</small>
                        </div>
                    </div>`;
                });
                
                resultsHTML += `
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <button type="button" class="btn btn-sm btn-outline-danger copy-email" data-email="${bloodBank.email}">Copy Email</button>
                            <button type="button" class="btn btn-sm btn-outline-danger copy-phone" data-phone="${bloodBank.contactNo}">Copy Phone</button>
                        </div>
                    </div>
                </div>`;
            });
            
            resultsHTML += '</div>';
            resultDiv.innerHTML = resultsHTML;
            
            // Add event listeners to the copy buttons after they're added to the DOM
            addCopyButtonListeners();
        }

        function addCopyButtonListeners() {
            // Add listeners for email copy buttons
            document.querySelectorAll('.copy-email').forEach(button => {
                button.addEventListener('click', function() {
                    const email = this.getAttribute('data-email');
                    copyToClipboard(email, 'Email');
                });
            });
            
            // Add listeners for phone copy buttons
            document.querySelectorAll('.copy-phone').forEach(button => {
                button.addEventListener('click', function() {
                    const phone = this.getAttribute('data-phone');
                    copyToClipboard(phone, 'Phone number');
                });
            });
        }

        function copyToClipboard(text, type) {
            navigator.clipboard.writeText(text)
                .then(() => {
                    showToast(`${type} copied to clipboard!`);
                })
                .catch(err => {
                    console.error('Could not copy text: ', err);
                    showToast(`Failed to copy ${type.toLowerCase()}`, false);
                });
        }

        function showToast(message, success = true) {
            const toastContainer = document.querySelector('.toast-container');
            const toast = document.createElement('div');
            toast.className = `toast ${success ? 'toast-success' : 'toast-error'}`;
            toast.textContent = message;
            
            toastContainer.appendChild(toast);
            
            // Show the toast
            setTimeout(() => {
                toast.classList.add('show');
            }, 100);
            
            // Hide and remove the toast after 3 seconds
            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => {
                    toastContainer.removeChild(toast);
                }, 300);
            }, 3000);
        }

        function showNoResults() {
            document.getElementById("result").innerHTML = `
            <div class="no-results">
                <img src="/api/placeholder/200/200" alt="No results" class="mb-3">
                <h4>No blood availability found</h4>
                <p>Please try different search criteria or check back later.</p>
            </div>`;
        }

        // Initialize with default search when the page loads
        document.addEventListener("DOMContentLoaded", function() {
            document.getElementById("searchButton").click();
        });
    </script>
</body>
</html>